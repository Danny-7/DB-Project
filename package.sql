CREATE OR REPLACE PACKAGE Projet AS

FUNCTION NBEQUIPEPROJET(IdProj INTEGER) RETURN NUMBER;
PROCEDURE MAJINTERVENANTS(IdProj NUMBER, Nbre NUMBER);
PROCEDURE AJOUTPROSPECTION(IdProj NUMBER, IdProspect INTEGER);
PROCEDURE PRESENCEREUNION(IdReu INTEGER);
PROCEDURE PRESENCEPROJETREUNION(IdProj INT);
PROCEDURE PROJETINFO;
END Projet;
/

CREATE OR REPLACE PACKAGE BODY Projet AS


FUNCTION NBEQUIPEPROJET(IdProj INTEGER) RETURN NUMBER IS
nbProspect INTEGER:= 0;
BEGIN

SELECT COUNT(Id_Pro) INTO nbProspect FROM INVESTISSEMENT WHERE IdProj = IdProj;

RETURN nbProspect;

END NBEQUIPEPROJET;


PROCEDURE MAJINTERVENANTS(IdProj NUMBER, Nbre NUMBER) IS
TSQL VARCHAR2(50);
nbInter INTEGER;

BEGIN

SELECT NbIntervenant INTO nbInter FROM Projet WHERE IdProj = IdProj; 

IF(Nbre > 0) THEN
    TSQL:= 'UPDATE ' || Projet || ' set ' || NbIntervenant || '=' NbIntervenant+Nbre || ' WHERE ' || IdProj || '=' IdProj;
ELSIF(Nbre < 0 AND NBEQUIPEPROJET(IdProj) < nb) THEN
    TSQL:= 'UPDATE ' || Projet || ' set ' || NbIntervenant || '=' NbIntervenant-Nbre || ' WHERE ' || IdProj || '=' IdProj;
END IF;

EXECUTE IMMEDIATE TSQL;

END MAJINTERVENANTS;


AJOUTPROSPECTION(IdProj NUMBER, IdProspect INTEGER) IS

TSQL VARCHAR2(50);
nbInter INTEGER;

BEGIN

SELECT NbIntervenant INTO nbInter FROM Projet WHERE IdProj = IdProj; 

IF(NBEQUIPEPROJET(IdProj) < nbInter) THEN
    TSQL:= 'INSERT INTO ' || Investissement ||'(DateAdhesion, IdProj, IdPro) VALUES('||SYSDATE, IdProj, IdProspect||')';
    EXECUTE IMMEDIATE TSQL;
ELSE
    DBMS_OUTPUT.PUT_LINE('Ajout de prospection echouÃ©');
END IF;

END AJOUTPROSPECTION;


PROCEDURE PRESENCEREUNION(idReu INTEGER) IS

CURSOR C_PRES IS SELECT IdPro
 FROM Invitation AS I INNER JOIN Prospecteur AS P ON I.IdProj = P.IdProj
    WHERE IdReu = IdReu AND Participation = 1 ORDER BY P.Nom_Pro, P.Prenom_Pro;

BEGIN

FOR tuple IN C_PRES LOOP
    DBMS_OUTPUT.PUT_LINE(tuple.Nom_Pro ||' ' || tuple.Prenom_Pro);
END LOOP;

END PRESENCEREUNION;

END Projet;












